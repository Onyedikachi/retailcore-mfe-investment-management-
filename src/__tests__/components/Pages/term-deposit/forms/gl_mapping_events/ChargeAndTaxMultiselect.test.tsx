// Generated by CodiumAI
import React from "react";
import { render, screen } from "@testing-library/react";
import { fireEvent } from "@testing-library/react";
import ChargeAndTaxMultiSelect from "../../../../../../components/pages/term-deposit/forms/gl_mapping_events/ChargeAndTaxMultiselect"

jest.mock("react-router-dom", () => ({
    BrowserRouter: ({ children }) => <div>{children}</div>,
    Link: ({ to, children }) => <a href={to}>{children}</a>,
    useNavigate: jest.fn(),
    useSearchParams: jest.fn().mockReturnValue([new URLSearchParams({ sub_type: "", filter: "", category: "investments", tab: "" })]),
    useParams: jest.fn().mockReturnValue({ process: "continue" }),
    useLocation: jest.fn().mockReturnValue({ pathname: "" })
}));
describe('default', () => {


    // User clicks on the search button and the search input field becomes visible
    it('should open search input field when search button is clicked', () => {
        const addedOptions = [];
        const values = {};
        const setFormData = (data) => {
            console.log(data);
        };
        const event = "event";
        const type = "charges";
        const availableOptions = {
            data: {
                records: [
                    { name: "Option 1", charge_id: 1 },
                    { name: "Option 2", charge_id: 2 },
                    { name: "Option 3", charge_id: 3 },
                ],
            },
        };
        const disabled = false;

        render(
            <ChargeAndTaxMultiSelect
                addedOptions={addedOptions}
                values={values}
                setFormData={setFormData}
                event={event}
                type={type}
                availableOptions={availableOptions}
                disabled={disabled}
            />
        );

        const searchButton = screen.getByTestId("open-button");
        fireEvent.click(searchButton);

        const searchInput = screen.getByTestId("gli-input");
        expect(searchInput).toBeVisible();
    });

    // The availableOptions prop is undefined or null
    it('should render without options when availableOptions is undefined or null', () => {
        const addedOptions = [];
        const values = {};
        const setFormData = (data) => {
            console.log(data);
        };
        const event = "event";
        const type = "charges";
        const availableOptions = undefined;
        const disabled = false;

        render(
            <ChargeAndTaxMultiSelect
                addedOptions={addedOptions}
                values={values}
                setFormData={setFormData}
                event={event}
                type={type}
                availableOptions={availableOptions}
                disabled={disabled}
            />
        );

        const searchButton = screen.getByTestId("open-button");
        fireEvent.click(searchButton);

        const options = screen.queryAllByRole("checkbox");
        expect(options.length).toBe(0);
    });
});
