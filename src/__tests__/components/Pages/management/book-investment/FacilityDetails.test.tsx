import {handleProductDetails} from "../../../../../components/pages/management/book-investment/FacilityDetails.tsx"

// Generated by CodiumAI

describe('handleProductDetails', () => {

  // Sets the minimum tenor value to the applicableTenorMin value of the productDetail's pricingConfiguration
  it('should set the minimum tenor value when productDetail is not null and pricingConfiguration is not null', () => {
    const productDetail = {
      pricingConfiguration: {
        applicableTenorMin: 10,
        applicableTenorMax: 20,
        applicablePrincipalMin: 1000,
        applicablePrincipalMax: 5000,
        interestRateConfigModels: [[]],
        interestRateRangeType: 2,
        interestRateMin: 1,
        interestRateMax: 5
      }
    };
    const values = {};
    const setValue = jest.fn();
    const setProductDetail = jest.fn();

    handleProductDetails({ productDetail, values, setValue, setProductDetail });

    expect(setValue).toHaveBeenCalledWith("tenorMin", 10);
  });

  // Sets the maximum tenor value to the applicableTenorMax value of the productDetail's pricingConfiguration
  it('should set the maximum tenor value when productDetail is not null and pricingConfiguration is not null', () => {
    const productDetail = {
      pricingConfiguration: {
        applicableTenorMin: 10,
        applicableTenorMax: 20,
        applicablePrincipalMin: 1000,
        applicablePrincipalMax: 5000,
        interestRateConfigModels: [[]],
        interestRateRangeType: 2,
        interestRateMin: 1,
        interestRateMax: 5
      }
    };
    const values = {};
    const setValue = jest.fn();
    const setProductDetail = jest.fn();

    handleProductDetails({ productDetail, values, setValue, setProductDetail });

    expect(setValue).toHaveBeenCalledWith("tenorMax", 20);
  });

  // Sets the minimum principal value to the applicablePrincipalMin value of the productDetail's pricingConfiguration
  it('should set the minimum principal value when productDetail is not null and pricingConfiguration is not null', () => {
    const productDetail = {
      pricingConfiguration: {
        applicableTenorMin: 10,
        applicableTenorMax: 20,
        applicablePrincipalMin: 1000,
        applicablePrincipalMax: 5000,
        interestRateConfigModels: [[]],
        interestRateRangeType: 2,
        interestRateMin: 1,
        interestRateMax: 5
      }
    };
    const values = {};
    const setValue = jest.fn();
    const setProductDetail = jest.fn();

    handleProductDetails({ productDetail, values, setValue, setProductDetail });

    expect(setValue).toHaveBeenCalledWith("prinMin", 1000);
  });

  // If productDetail is null, does not set any values
  it('should not set any values when productDetail is null', () => {
    const productDetail = null;
    const values = {};
    const setValue = jest.fn();
    const setProductDetail = jest.fn();

    handleProductDetails({ productDetail, values, setValue, setProductDetail });

    expect(setValue).not.toHaveBeenCalled();
  });
});
