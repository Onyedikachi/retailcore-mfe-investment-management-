<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/StatusCard.test.tsx">
    <testCase name="StatusCard Renders without error" duration="207">
      <failure message="TypeError: Cannot destructure property &apos;selected&apos; of &apos;(0 , _react.useContext)(...)&apos; as it is undefined."><![CDATA[TypeError: Cannot destructure property 'selected' of '(0 , _react.useContext)(...)' as it is undefined.
    at StatusCard (/Users/work/Documents/retailcore-mfe-investment-management/src/components/StatusCard.tsx:361:11)
    at renderWithHooks (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:14985:18)
    at mountIndeterminateComponent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:17811:13)
    at beginWork (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:19049:16)
    at HTMLUnknownElement.callCallback (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:3945:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:338:25)
    at invokeEventListeners (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:274:3)
    at HTMLUnknownElementImpl._dispatch (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:221:9)
    at HTMLUnknownElementImpl.dispatchEvent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:94:17)
    at HTMLUnknownElement.dispatchEvent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:231:34)
    at Object.invokeGuardedCallbackDev (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:3994:16)
    at invokeGuardedCallback (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:4056:31)
    at beginWork$1 (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:23964:7)
    at performUnitOfWork (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22779:12)
    at workLoopSync (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22707:5)
    at renderRootSync (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22670:7)
    at performSyncWorkOnRoot (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22293:18)
    at scheduleUpdateOnFiber (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:21881:7)
    at updateContainer (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:25482:3)
    at /Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26021:7
    at unbatchedUpdates (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22431:12)
    at legacyRenderSubtreeIntoContainer (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26020:5)
    at Object.render (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26103:10)
    at /Users/work/Documents/retailcore-mfe-investment-management/node_modules/@testing-library/react/dist/pure.js:101:25
    at batchedUpdates$1 (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22380:12)
    at act (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1042:14)
    at render (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/@testing-library/react/dist/pure.js:97:26)
    at Object.<anonymous> (/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/StatusCard.test.tsx:60:11)
    at Promise.then.completed (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:391:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:316:10)
    at _callCircusTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:218:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:155:3)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:66:9)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:60:9)
    at run (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:25:3)
    at runAndTransformResultsToJestFormat (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
    at jestAdapter (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
    at runTestInternal (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:389:16)
    at runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:475:34)
    at Object.worker (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/testWorker.js:133:12)]]></failure>
    </testCase>
    <testCase name="StatusButton Renders without error" duration="102"/>
    <testCase name="StatusButton Shows spinner while loading" duration="20"/>
    <testCase name="sortOptions Sorts and returns expected options in &apos;all products&apos; category" duration="10"/>
    <testCase name="sortOptions Sorts and returns expected options in &apos;requests&apos; category" duration="6"/>
    <testCase name="StatusCategoryButton should handle button click and apply styles" duration="49"/>
    <testCase name="handleActiveType Sets status to &quot;&quot; when activeType === all " duration="3"/>
    <testCase name="handleActiveType Sets status according to various activeTypes" duration="29"/>
    <testCase name="filterDefaultOptions should return an array of objects filtered from" duration="3"/>
    <testCase name="filterDefaultOptions should not contain objects withroperty equal  or" duration="3"/>
    <testCase name="filterDefaultOptions should contain objects withroperty equal  or only" duration="16"/>
    <testCase name="filterDefaultOptions should contain objects withroperty equal  only" duration="8"/>
    <testCase name="filterDefaultOptions should contain objects withroperty equal to only" duration="2"/>
    <testCase name="StatusButton should render button element with correct type and styling" duration="25"/>
    <testCase name="StatusButton should display correct count when isLoading is false" duration="25"/>
    <testCase name="StatusButton should display spinner when isLoading is true" duration="29"/>
    <testCase name="StatusButton should render button element with correct type and styling when count returns undefined" duration="14"/>
    <testCase name="StatusButton should render button element with correct type and styling when count returns null" duration="11"/>
    <testCase name="StatusButton should render button element with correct type and styling when analyticsData is undefined" duration="8"/>
    <testCase name="StatusButton should render button element with correct type and styling" duration="49"/>
    <testCase name="StatusButton should display correct count based on provided analytics data" duration="86"/>
    <testCase name="StatusButton should display spinner animation when isLoading is true" duration="23"/>
    <testCase name="StatusButton should handle missing or invalid item prop" duration="7"/>
    <testCase name="StatusButton should handle missing or invalid analyticsData prop" duration="17"/>
    <testCase name="StatusButton should handle missing or invalid setActiveType prop" duration="23"/>
    <testCase name="count should return the correct count for each status type" duration="3"/>
    <testCase name="count should return 0 when the input item type is not recognized" duration="2"/>
    <testCase name="count should return 0 when the analyticsData is null" duration="2"/>
    <testCase name="count should return 0 when the analyticsData is undefined" duration="11"/>
    <testCase name="count should return 0 when the input item type is null" duration="2"/>
    <testCase name="count should return 0 when the input item type is undefined" duration="2"/>
    <testCase name="count should return 0 when the input item type is an empty string" duration="4"/>
    <testCase name="handleClick should set the category state to the selected item type" duration="22"/>
    <testCase name="handleClick should set the selected state to the first item of ProductOptions if category is AllProducts" duration="6"/>
    <testCase name="handleClick should set the selected state to the first item of RequestOptions if category is not AllProducts" duration="4"/>
    <testCase name="handlePermission should set filtered product options to ProductOptions and filtered request options to RequestOptions when permissions include &quot;AUTHORIZE_INVESTMENT_PRODUCT_CREATION_OR_MODIFICATION_REQUESTS&quot; and &quot;CREATE_INVESTMENT_PRODUCT&quot;, and &quot;VIEW_ALL_INVESTMENT_PRODUCT_RECORDS&quot; and &quot;VIEW_ALL_INVESTMENT_PRODUCT_REQUESTS&quot;" duration="5"/>
    <testCase name="handlePermission should set filtered product options to CreateProductOptions and filtered request options to CreateRequestOptions when permissions include &quot;CREATE_INVESTMENT_PRODUCT&quot; and not &quot;AUTHORIZE_INVESTMENT_PRODUCT_CREATION_OR_MODIFICATION_REQUESTS&quot;, and &quot;VIEW_ALL_INVESTMENT_PRODUCT_RECORDS&quot; and &quot;VIEW_ALL_INVESTMENT_PRODUCT_REQUESTS&quot;" duration="2"/>
    <testCase name="handlePermission should set filtered product options to ApproveProductOptions and filtered request options to ApproveRequestOptions when not &quot;CREATE_INVESTMENT_PRODUCT&quot; and permissions include &quot;AUTHORIZE_INVESTMENT_PRODUCT_CREATION_OR_MODIFICATION_REQUESTS&quot;, and &quot;VIEW_ALL_INVESTMENT_PRODUCT_RECORDS&quot; and &quot;VIEW_ALL_INVESTMENT_PRODUCT_REQUESTS&quot;" duration="2"/>
    <testCase name="handlePermission should set filtered product options to ApproveProductOptions and filtered request options to ApproveRequestOptions when not &quot;CREATE_INVESTMENT_PRODUCT&quot; and permissions include &quot;AUTHORIZE_INVESTMENT_PRODUCT_CREATION_OR_MODIFICATION_REQUESTS&quot;, and &quot;VIEW_ALL_INVESTMENT_PRODUCT_RECORDS&quot; and &quot;VIEW_ALL_INVESTMENT_PRODUCT_REQUESTS&quot;" duration="13"/>
    <testCase name="handlePermission should set filtered product options to ProductOptions without &quot;created_by_anyone&quot; and &quot;approved_system_wide&quot;, and filtered request options to RequestOptions without &quot;created_by_anyone&quot; and &quot;sent_to_anyone&quot; when permissions include &quot;AUTHORIZE_INVESTMENT_PRODUCT_CREATION_OR_MODIFICATION_REQUESTS&quot; and &quot;CREATE_INVESTMENT_PRODUCT&quot;, but not &quot;VIEW_ALL_INVESTMENT_PRODUCT_RECORDS&quot; and &quot;VIEW_ALL_INVESTMENT_PRODUCT_REQUESTS&quot;" duration="3"/>
    <testCase name="handlePermission should set filtered product options to CreateProductOptions without &quot;created_by_anyone&quot;, and filtered request options to CreateRequestOptions without &quot;created_by_anyone&quot; when permissions include &quot;CREATE_INVESTMENT_PRODUCT&quot;, but not &quot;AUTHORIZE_INVESTMENT_PRODUCT_CREATION_OR_MODIFICATION_REQUESTS&quot; and not &quot;VIEW_ALL_INVESTMENT_PRODUCT_RECORDS&quot; and not &quot;VIEW_ALL_INVESTMENT_PRODUCT_REQUESTS&quot;" duration="3"/>
    <testCase name="handlePermission should set filtered product options to ApproveProductOptions without &quot;approved_system_wide&quot;, and filtered request options to ApproveRequestOptions without &quot;sent_to_anyone&quot; when not &quot;CREATE_INVESTMENT_PRODUCT&quot; and permissions include &quot;AUTHORIZE_INVESTMENT_PRODUCT_CREATION_OR_MODIFICATION_REQUESTS&quot;, but not &quot;VIEW_ALL_INVESTMENT_PRODUCT_RECORDS&quot; and not &quot;VIEW_ALL_INVESTMENT_PRODUCT_REQUESTS&quot;" duration="10"/>
    <testCase name="handlePermission should set filtered product options and filtered request options to empty array when permissions is empty" duration="3"/>
    <testCase name="handlePermission should set activeType to &quot;all&quot; when status is empty" duration="8"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/product-information.test.tsx">
    <testCase name="ProductInformation should render the form without errors" duration="473"/>
    <testCase name="ProductInformation Changes values" duration="673"/>
    <testCase name="ProductInformation should handle input and display character count" duration="264"/>
    <testCase name="ProductInformation should update character count for product name in real-time" duration="121"/>
    <testCase name="ProductInformation should display negative character count message for product name with more than 50 characters" duration="282"/>
    <testCase name="ProductInformation Should show error when invalid name is typed" duration="273"/>
    <testCase name="ProductInformation Should show error when description is too short" duration="92"/>
    <testCase name="handleValidatingName should trigger productName and clear errors when nameIsSuccess is true and charLeft is less than 47" duration="8"/>
    <testCase name="handleValidatingName should assign error to productName and set setIsNameOkay to false when nameIsError is true" duration="12"/>
    <testCase name="handleValidatingName should not trigger productName and clear errors when nameIsSuccess is true but charLeft is greater than or equal to 47" duration="9"/>
    <testCase name="handleValidatingName should not assign error to productName when nameIsError is true but nameError is undefined" duration="3"/>
    <testCase name="handleValidatingName should not throw an error when setIsNameOkay is undefined" duration="3"/>
    <testCase name="InputDiv should render a div element with class &apos;w-full flex flex-col gap-2&apos;" duration="6"/>
    <testCase name="InputDiv should render the children passed as props inside the div element" duration="10"/>
    <testCase name="InputDiv should accept any valid React element as children" duration="5"/>
    <testCase name="InputDiv should render an empty div element if no children are passed as props" duration="13"/>
    <testCase name="InputDiv should not render any additional elements or components" duration="5"/>
    <testCase name="handleName should update character count, clear errors, set current name, and handle validation" duration="11"/>
    <testCase name="handleName should set character count based on name length" duration="3"/>
    <testCase name="handleName should clear errors on productName field" duration="3"/>
    <testCase name="handleName should set current name to watchName" duration="19"/>
    <testCase name="handleName should set disabled to true if watchName length is less than or equal to 3" duration="2"/>
    <testCase name="handleName should compare watchName to formData.oldValue" duration="2"/>
    <testCase name="handleName should validate name with productId if provided" duration="6"/>
    <testCase name="handleSlogan should call setSloganCharLeft with the correct remainder value when watchSlogan is not null" duration="3"/>
    <testCase name="handleSlogan should call setIsSloganOkay with true when watchSlogan is not null and has length greater than 0" duration="5"/>
    <testCase name="handleSlogan should call setIsSloganOkay with false when watchSlogan is null or has length 0" duration="3"/>
    <testCase name="handleSlogan should call setSloganCharLeft with defaultSloganLength when watchSlogan is an empty string" duration="5"/>
    <testCase name="handleSlogan should call setSloganCharLeft with a negative remainder value when watchSlogan is a string with length greater than defaultSloganLength" duration="11"/>
    <testCase name="ProductInformation should render the form with the correct inputs and labels" duration="121"/>
    <testCase name="ProductInformation should populate the form with default values from formData prop" duration="98"/>
    <testCase name="ProductInformation should update the form values when formData prop changes" duration="90"/>
    <testCase name="ProductInformation should handle empty form data prop" duration="154">
      <failure message="TypeError: Cannot set properties of null (setting &apos;currency&apos;)"><![CDATA[TypeError: Cannot set properties of null (setting 'currency')
    at /Users/work/Documents/retailcore-mfe-investment-management/src/components/pages/term-deposit/forms/product-information.tsx:187:22
    at invokePassiveEffectCreate (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:23487:20)
    at HTMLUnknownElement.callCallback (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:3945:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:338:25)
    at invokeEventListeners (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:274:3)
    at HTMLUnknownElementImpl._dispatch (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:221:9)
    at HTMLUnknownElementImpl.dispatchEvent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:94:17)
    at HTMLUnknownElement.dispatchEvent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:231:34)
    at Object.invokeGuardedCallbackDev (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:3994:16)
    at invokeGuardedCallback (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:4056:31)
    at flushPassiveEffectsImpl (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:23574:9)
    at unstable_runWithPriority (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/scheduler/cjs/scheduler.development.js:468:12)
    at runWithPriority$1 (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:11276:10)
    at flushPassiveEffects (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:23447:14)
    at performSyncWorkOnRoot (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22269:3)
    at /Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:11327:26
    at unstable_runWithPriority (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/scheduler/cjs/scheduler.development.js:468:12)
    at runWithPriority$1 (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:11276:10)
    at flushSyncCallbackQueueImpl (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:11322:9)
    at flushSyncCallbackQueue (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:11309:3)
    at batchedUpdates$1 (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22387:7)
    at act (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1042:14)
    at render (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/@testing-library/react/dist/pure.js:97:26)
    at renderWithProviders (/Users/work/Documents/retailcore-mfe-investment-management/src/__mocks__/api/Wrapper.tsx:40:28)
    at Object.<anonymous> (/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/product-information.test.tsx:909:24)
    at Promise.then.completed (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:391:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:316:10)
    at _callCircusTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:218:40)
    at _runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:155:3)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:66:9)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:60:9)
    at run (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:25:3)
    at runAndTransformResultsToJestFormat (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
    at jestAdapter (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
    at runTestInternal (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:389:16)
    at runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:475:34)
    at Object.worker (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/testWorker.js:133:12)]]></failure>
    </testCase>
    <testCase name="ProductInformation should handle missing or invalid form inputs" duration="142"/>
    <testCase name="ProductInformation should handle long product names and slogans" duration="119"/>
    <testCase name="handleName should handle name with debounce" duration="9"/>
    <testCase name="handleName should handle name without debounce" duration="4"/>
    <testCase name="onProceed should set the start and end date of the form data to the formatted date strings when they exist" duration="18"/>
    <testCase name="onProceed should call the proceed function" duration="2"/>
    <testCase name="onProceed should not set the start and end date of the form data when d parameter is missing startDate or endDate fields" duration="6"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/table/index.test.tsx">
    <testCase name="handleProductsDropdown should return an array of dropdown options based on the status parameter" duration="13"/>
    <testCase name="handleProductsDropdown should filter out options based on the isChecker parameter" duration="3"/>
    <testCase name="handleProductsDropdown should filter out options based on the permissions parameter" duration="5"/>
    <testCase name="TableComponent should render a table with headers and rows" duration="114">
      <failure message="TypeError: Cannot read properties of undefined (reading &apos;_context&apos;)"><![CDATA[TypeError: Cannot read properties of undefined (reading '_context')
    at useContext (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react/cjs/react.development.js:1492:17)
    at TableComponent (/Users/work/Documents/retailcore-mfe-investment-management/src/components/table/index.tsx:233:22)
    at renderWithHooks (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:14985:18)
    at mountIndeterminateComponent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:17811:13)
    at beginWork (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:19049:16)
    at HTMLUnknownElement.callCallback (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:3945:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:338:25)
    at invokeEventListeners (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:274:3)
    at HTMLUnknownElementImpl._dispatch (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:221:9)
    at HTMLUnknownElementImpl.dispatchEvent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:94:17)
    at HTMLUnknownElement.dispatchEvent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:231:34)
    at Object.invokeGuardedCallbackDev (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:3994:16)
    at invokeGuardedCallback (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:4056:31)
    at beginWork$1 (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:23964:7)
    at performUnitOfWork (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22779:12)
    at workLoopSync (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22707:5)
    at renderRootSync (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22670:7)
    at performSyncWorkOnRoot (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22293:18)
    at scheduleUpdateOnFiber (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:21881:7)
    at updateContainer (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:25482:3)
    at /Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26021:7
    at unbatchedUpdates (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22431:12)
    at legacyRenderSubtreeIntoContainer (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26020:5)
    at Object.render (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26103:10)
    at /Users/work/Documents/retailcore-mfe-investment-management/node_modules/@testing-library/react/dist/pure.js:101:25
    at batchedUpdates$1 (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22380:12)
    at act (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1042:14)
    at render (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/@testing-library/react/dist/pure.js:97:26)
    at Object.<anonymous> (/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/table/index.test.tsx:147:11)
    at Promise.then.completed (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:391:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:316:10)
    at _callCircusTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:218:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:155:3)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:66:9)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:60:9)
    at run (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:25:3)
    at runAndTransformResultsToJestFormat (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
    at jestAdapter (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
    at runTestInternal (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:389:16)
    at runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:475:34)
    at Object.worker (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/testWorker.js:133:12)]]></failure>
    </testCase>
    <testCase name="TableComponent should display a loading indicator when data is being fetched" duration="18">
      <failure message="TypeError: Cannot read properties of undefined (reading &apos;_context&apos;)"><![CDATA[TypeError: Cannot read properties of undefined (reading '_context')
    at useContext (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react/cjs/react.development.js:1492:17)
    at TableComponent (/Users/work/Documents/retailcore-mfe-investment-management/src/components/table/index.tsx:233:22)
    at renderWithHooks (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:14985:18)
    at mountIndeterminateComponent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:17811:13)
    at beginWork (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:19049:16)
    at HTMLUnknownElement.callCallback (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:3945:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:338:25)
    at invokeEventListeners (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:274:3)
    at HTMLUnknownElementImpl._dispatch (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:221:9)
    at HTMLUnknownElementImpl.dispatchEvent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:94:17)
    at HTMLUnknownElement.dispatchEvent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:231:34)
    at Object.invokeGuardedCallbackDev (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:3994:16)
    at invokeGuardedCallback (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:4056:31)
    at beginWork$1 (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:23964:7)
    at performUnitOfWork (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22779:12)
    at workLoopSync (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22707:5)
    at renderRootSync (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22670:7)
    at performSyncWorkOnRoot (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22293:18)
    at scheduleUpdateOnFiber (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:21881:7)
    at updateContainer (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:25482:3)
    at /Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26021:7
    at unbatchedUpdates (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22431:12)
    at legacyRenderSubtreeIntoContainer (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26020:5)
    at Object.render (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26103:10)
    at /Users/work/Documents/retailcore-mfe-investment-management/node_modules/@testing-library/react/dist/pure.js:101:25
    at batchedUpdates$1 (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22380:12)
    at act (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1042:14)
    at render (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/@testing-library/react/dist/pure.js:97:26)
    at Object.<anonymous> (/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/table/index.test.tsx:181:11)
    at Promise.then.completed (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:391:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:316:10)
    at _callCircusTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:218:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:155:3)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:66:9)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:60:9)
    at run (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:25:3)
    at runAndTransformResultsToJestFormat (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
    at jestAdapter (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
    at runTestInternal (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:389:16)
    at runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:475:34)
    at Object.worker (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/testWorker.js:133:12)]]></failure>
    </testCase>
    <testCase name="TextCellContent renders text content and dot correctly" duration="30"/>
    <testCase name="TextCellContent renders &quot;-&quot; when value is falsy" duration="6"/>
    <testCase name="TextCellContent should render nothing when value is null or undefined" duration="9"/>
    <testCase name="ProductNameCellContent renders product code correctly" duration="16"/>
    <testCase name="ProductNameCellContent renders &quot;-&quot; when product code is falsy" duration="6"/>
    <testCase name="UpdatedOnCellContent should render the date and time in the correct format" duration="60"/>
    <testCase name="UpdatedOnCellContent should render nothing when value is null or undefined" duration="16"/>
    <testCase name="UpdatedOnCellContent should render nothing when value is not a valid date" duration="10"/>
    <testCase name="UpdatedOnCellContent should render nothing when value is not a string or a date object" duration="8"/>
    <testCase name="UpdatedOnCellContent should render the date and time in the correct format for a different timezone" duration="7"/>
    <testCase name="StateCellContent should render a span element with the given value as its text content" duration="6"/>
    <testCase name="StateCellContent should apply a class to the span element based on the value passed to the function" duration="21"/>
    <testCase name="StatusCellContent should render a span element with the specific class based on the value passed as props" duration="11"/>
    <testCase name="StatusCellContent should call handleUserView function to determine the text content of the span element" duration="25"/>
    <testCase name="StatusCellContent should call handleColorState function to determine the background color of the span element" duration="59"/>
    <testCase name="StatusCellContent should render a span element with the default class and value as text content when the value passed as props does not match any of the cases in handleUserView and handleColorState" duration="9"/>
    <testCase name="StatusCellContent should default the isChecker prop to false if it is not a boolean" duration="15"/>
    <testCase name="StatusCellContent should render a FaEye icon next to the text content" duration="14"/>
    <testCase name="ActionsCellContent should render a DropdownButton component with the given dropDownOptions and onClick props" duration="40"/>
    <testCase name="ActionsCellContent should render a DropdownButton component with empty options when dropDownOptions prop is not provided" duration="142"/>
    <testCase name="handleUpdated should return null when key is &quot;state&quot; and newState is equal to value" duration="2"/>
    <testCase name="handleProductsDropdown should return an array of options based on the status and user permissions" duration="3"/>
    <testCase name="handleProductsDropdown should filter out &quot;deactivate&quot; and &quot;activate&quot; options if user does not have RE_OR_DEACTIVATE_INVESTMENT_PRODUCT permission" duration="2"/>
    <testCase name="handleProductsDropdown should filter out &quot;modify&quot; and &quot;clone&quot; options if user does not have CREATE_INVESTMENT_PRODUCT permission" duration="12">
      <failure message="Error: expect(received).toEqual(expected) // deep equality"><![CDATA[Error: expect(received).toEqual(expected) // deep equality

- Expected  - 4
+ Received  + 0

  Array [
    Object {
      "text": "View",
      "value": "view",
    },
-   Object {
-     "text": "Activate",
-     "value": "activate",
-   },
  ]
    at Object.<anonymous> (/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/table/index.test.tsx:517:20)
    at Promise.then.completed (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:391:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:316:10)
    at _callCircusTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:218:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:155:3)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:66:9)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:60:9)
    at run (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:25:3)
    at runAndTransformResultsToJestFormat (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
    at jestAdapter (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
    at runTestInternal (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:389:16)
    at runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:475:34)
    at Object.worker (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/testWorker.js:133:12)]]></failure>
    </testCase>
    <testCase name="handleProductsDropdown should return an empty array if status is falsy" duration="3"/>
    <testCase name="handleProductsDropdown should return an empty array if DropDownOptions[status] is falsy" duration="5"/>
    <testCase name="handleUpdated should return null when key is &quot;state&quot; and newState is equal to value" duration="2"/>
    <testCase name="handleProductsDropdown should return an array of options based on the status and user permissions" duration="2"/>
    <testCase name="handleProductsDropdown should filter out &quot;deactivate&quot; and &quot;activate&quot; options if user does not have RE_OR_DEACTIVATE_INVESTMENT_PRODUCT permission" duration="3"/>
    <testCase name="handleProductsDropdown should filter out &quot;modify&quot; and &quot;clone&quot; options if user does not have CREATE_INVESTMENT_PRODUCT permission" duration="5">
      <failure message="Error: expect(received).toEqual(expected) // deep equality"><![CDATA[Error: expect(received).toEqual(expected) // deep equality

- Expected  - 4
+ Received  + 0

  Array [
    Object {
      "text": "View",
      "value": "view",
    },
-   Object {
-     "text": "Activate",
-     "value": "activate",
-   },
  ]
    at Object.<anonymous> (/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/table/index.test.tsx:678:20)
    at Promise.then.completed (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:391:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:316:10)
    at _callCircusTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:218:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:155:3)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:66:9)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:60:9)
    at run (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:25:3)
    at runAndTransformResultsToJestFormat (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
    at jestAdapter (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
    at runTestInternal (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:389:16)
    at runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:475:34)
    at Object.worker (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/testWorker.js:133:12)]]></failure>
    </testCase>
    <testCase name="handleProductsDropdown should return an empty array if status is falsy" duration="2"/>
    <testCase name="handleProductsDropdown should return an empty array if DropDownOptions[status] is falsy" duration="2"/>
    <testCase name="handleUpdated should return time of update if value was updated" duration="10"/>
    <testCase name="handleUpdated should not return time of update if value was not updated" duration="3"/>
    <testCase name="handleUpdated should handle change of state value" duration="4"/>
    <testCase name="handleUpdated should handle non change of state value" duration="3"/>
    <testCase name="handleUpdated Should return nothing when value is null" duration="3"/>
    <testCase name="statusHandler should set success text and open success modal when isSuccess is true" duration="3"/>
    <testCase name="statusHandler should set success text and open success modal when activateSuccess is true and role is superadmin or admin" duration="4"/>
    <testCase name="statusHandler should set failed text, subtext and open failed modal when isError is true" duration="6"/>
    <testCase name="statusHandler should not set any text or open any modal when none of the boolean flags are true" duration="2"/>
    <testCase name="statusHandler should set failed text and open failed modal when isError is true and error object is null" duration="2"/>
    <testCase name="statusHandler should set failed text and open failed modal when activateIsError is true and activateError object is null" duration="3"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/pages/management/book-investment/IndexComponent.test.tsx">
    <testCase name="IndexComponent should render the component without crashing" duration="197">
      <failure message="Error: could not find react-redux context value; please ensure the component is wrapped in a &lt;Provider&gt;"><![CDATA[Error: could not find react-redux context value; please ensure the component is wrapped in a <Provider>
    at useReduxContext (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-redux/lib/hooks/useReduxContext.js:23:13)
    at useStore (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-redux/lib/hooks/useStore.js:24:9)
    at useDispatch (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-redux/lib/hooks/useDispatch.js:21:19)
    at /Users/work/Documents/retailcore-mfe-investment-management/node_modules/@reduxjs/toolkit/src/query/react/buildHooks.ts:992:24
    at FormUpload (/Users/work/Documents/retailcore-mfe-investment-management/src/components/forms/FormUpload.tsx:161:30)
    at renderWithHooks (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:14985:18)
    at mountIndeterminateComponent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:17811:13)
    at beginWork (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:19049:16)
    at HTMLUnknownElement.callCallback (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:3945:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:338:25)
    at invokeEventListeners (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:274:3)
    at HTMLUnknownElementImpl._dispatch (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:221:9)
    at HTMLUnknownElementImpl.dispatchEvent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:94:17)
    at HTMLUnknownElement.dispatchEvent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:231:34)
    at Object.invokeGuardedCallbackDev (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:3994:16)
    at invokeGuardedCallback (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:4056:31)
    at beginWork$1 (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:23964:7)
    at performUnitOfWork (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22779:12)
    at workLoopSync (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22707:5)
    at renderRootSync (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22670:7)
    at performSyncWorkOnRoot (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22293:18)
    at scheduleUpdateOnFiber (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:21881:7)
    at updateContainer (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:25482:3)
    at /Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26021:7
    at unbatchedUpdates (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22431:12)
    at legacyRenderSubtreeIntoContainer (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26020:5)
    at Object.render (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26103:10)
    at /Users/work/Documents/retailcore-mfe-investment-management/node_modules/@testing-library/react/dist/pure.js:101:25
    at batchedUpdates$1 (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22380:12)
    at act (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1042:14)
    at render (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/@testing-library/react/dist/pure.js:97:26)
    at Object.<anonymous> (/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/pages/management/book-investment/IndexComponent.test.tsx:16:15)
    at Promise.then.completed (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:391:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:316:10)
    at _callCircusTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:218:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:155:3)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:66:9)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:60:9)
    at run (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:25:3)
    at runAndTransformResultsToJestFormat (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
    at jestAdapter (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
    at runTestInternal (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:389:16)
    at runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:475:34)
    at Object.worker (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/testWorker.js:133:12)]]></failure>
    </testCase>
    <testCase name="IndexComponent should display the correct title and breadcrumbs based on the investmentType parameter" duration="66">
      <failure message="Error: could not find react-redux context value; please ensure the component is wrapped in a &lt;Provider&gt;"><![CDATA[Error: could not find react-redux context value; please ensure the component is wrapped in a <Provider>
    at useReduxContext (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-redux/lib/hooks/useReduxContext.js:23:13)
    at useStore (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-redux/lib/hooks/useStore.js:24:9)
    at useDispatch (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-redux/lib/hooks/useDispatch.js:21:19)
    at /Users/work/Documents/retailcore-mfe-investment-management/node_modules/@reduxjs/toolkit/src/query/react/buildHooks.ts:992:24
    at FormUpload (/Users/work/Documents/retailcore-mfe-investment-management/src/components/forms/FormUpload.tsx:161:30)
    at renderWithHooks (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:14985:18)
    at mountIndeterminateComponent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:17811:13)
    at beginWork (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:19049:16)
    at HTMLUnknownElement.callCallback (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:3945:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:338:25)
    at invokeEventListeners (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:274:3)
    at HTMLUnknownElementImpl._dispatch (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:221:9)
    at HTMLUnknownElementImpl.dispatchEvent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:94:17)
    at HTMLUnknownElement.dispatchEvent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:231:34)
    at Object.invokeGuardedCallbackDev (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:3994:16)
    at invokeGuardedCallback (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:4056:31)
    at beginWork$1 (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:23964:7)
    at performUnitOfWork (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22779:12)
    at workLoopSync (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22707:5)
    at renderRootSync (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22670:7)
    at performSyncWorkOnRoot (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22293:18)
    at scheduleUpdateOnFiber (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:21881:7)
    at updateContainer (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:25482:3)
    at /Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26021:7
    at unbatchedUpdates (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22431:12)
    at legacyRenderSubtreeIntoContainer (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26020:5)
    at Object.render (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26103:10)
    at /Users/work/Documents/retailcore-mfe-investment-management/node_modules/@testing-library/react/dist/pure.js:101:25
    at batchedUpdates$1 (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22380:12)
    at act (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1042:14)
    at render (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/@testing-library/react/dist/pure.js:97:26)
    at Object.<anonymous> (/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/pages/management/book-investment/IndexComponent.test.tsx:24:36)
    at Promise.then.completed (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:391:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:316:10)
    at _callCircusTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:218:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:155:3)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:66:9)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:60:9)
    at run (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:25:3)
    at runAndTransformResultsToJestFormat (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
    at jestAdapter (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
    at runTestInternal (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:389:16)
    at runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:475:34)
    at Object.worker (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/testWorker.js:133:12)]]></failure>
    </testCase>
    <testCase name="IndexComponent should render the correct form step based on the step state" duration="55">
      <failure message="Error: could not find react-redux context value; please ensure the component is wrapped in a &lt;Provider&gt;"><![CDATA[Error: could not find react-redux context value; please ensure the component is wrapped in a <Provider>
    at useReduxContext (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-redux/lib/hooks/useReduxContext.js:23:13)
    at useStore (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-redux/lib/hooks/useStore.js:24:9)
    at useDispatch (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-redux/lib/hooks/useDispatch.js:21:19)
    at /Users/work/Documents/retailcore-mfe-investment-management/node_modules/@reduxjs/toolkit/src/query/react/buildHooks.ts:992:24
    at FormUpload (/Users/work/Documents/retailcore-mfe-investment-management/src/components/forms/FormUpload.tsx:161:30)
    at renderWithHooks (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:14985:18)
    at mountIndeterminateComponent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:17811:13)
    at beginWork (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:19049:16)
    at HTMLUnknownElement.callCallback (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:3945:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:338:25)
    at invokeEventListeners (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:274:3)
    at HTMLUnknownElementImpl._dispatch (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:221:9)
    at HTMLUnknownElementImpl.dispatchEvent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:94:17)
    at HTMLUnknownElement.dispatchEvent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:231:34)
    at Object.invokeGuardedCallbackDev (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:3994:16)
    at invokeGuardedCallback (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:4056:31)
    at beginWork$1 (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:23964:7)
    at performUnitOfWork (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22779:12)
    at workLoopSync (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22707:5)
    at renderRootSync (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22670:7)
    at performSyncWorkOnRoot (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22293:18)
    at scheduleUpdateOnFiber (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:21881:7)
    at updateContainer (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:25482:3)
    at /Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26021:7
    at unbatchedUpdates (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22431:12)
    at legacyRenderSubtreeIntoContainer (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26020:5)
    at Object.render (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26103:10)
    at /Users/work/Documents/retailcore-mfe-investment-management/node_modules/@testing-library/react/dist/pure.js:101:25
    at batchedUpdates$1 (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22380:12)
    at act (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1042:14)
    at render (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/@testing-library/react/dist/pure.js:97:26)
    at Object.<anonymous> (/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/pages/management/book-investment/IndexComponent.test.tsx:33:55)
    at Promise.then.completed (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:391:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:316:10)
    at _callCircusTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:218:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:155:3)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:66:9)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:60:9)
    at run (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:25:3)
    at runAndTransformResultsToJestFormat (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
    at jestAdapter (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
    at runTestInternal (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:389:16)
    at runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:475:34)
    at Object.worker (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/testWorker.js:133:12)]]></failure>
    </testCase>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/Pages/management/corporate/TableComponent.test.tsx">
    <testCase name="handleDropdown should return an array of options based on the status, isChecker, locked, and permissions parameters" duration="24"/>
    <testCase name="handleDropdown should filter out &quot;deactivate&quot; and &quot;activate&quot; options if user does not have &quot;CREATE_PRODUCT&quot; permission" duration="7"/>
    <testCase name="handleDropdown should filter out &quot;modify&quot; option if user does not have &quot;CREATE_PRODUCT&quot; permission and is not a checker" duration="9"/>
    <testCase name="handleDropdown should return an array with only &quot;view&quot; option if locked parameter is true and &quot;view&quot; option exists" duration="4"/>
    <testCase name="handleDropdown should return an empty array if locked parameter is true and &quot;view&quot; option does not exist" duration="3"/>
    <testCase name="handleDropdown should return an array with only &quot;view&quot; option if isChecker parameter is true and &quot;view&quot; option exists" duration="7"/>
    <testCase name="handleHeaders should filter out &apos;created_by&apos; when isChecker is true" duration="5"/>
    <testCase name="handleHeaders should filter out &apos;approved_By&apos; when isChecker is false" duration="31"/>
    <testCase name="handleDownload should generate CSV for requests category" duration="6"/>
    <testCase name="handleDownload should generate CSV for product category" duration="3"/>
    <testCase name="handleDownload should not generate CSV if downloadData is empty" duration="4"/>
    <testCase name="initiateDownload should download all requests when category is &quot;requests&quot;" duration="8"/>
    <testCase name="initiateDownload should not call download functions when category is not &quot;all products&quot; or &quot;requests&quot;" duration="3"/>
    <testCase name="initiateDownload should call downloadProducts with the correct parameters when category is Investments" duration="5">
      <failure message="Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)"><![CDATA[Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: {"filter_by": "selectedValue", "page_Size": 1000000}

Number of calls: 0
    at Object.<anonymous> (/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/Pages/management/corporate/TableComponent.test.tsx:320:30)
    at Promise.then.completed (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:391:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:316:10)
    at _callCircusTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:218:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:155:3)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:66:9)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:60:9)
    at run (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:25:3)
    at runAndTransformResultsToJestFormat (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
    at jestAdapter (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
    at runTestInternal (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:389:16)
    at runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:475:34)
    at Object.worker (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/testWorker.js:133:12)]]></failure>
    </testCase>
    <testCase name="initiateDownload should call downloadRequests with the correct parameters when category is not Investments" duration="3"/>
    <testCase name="initiateDownload should not call downloadProducts or downloadRequests when category is not defined or has an invalid value" duration="3"/>
    <testCase name="getSearchResult should call setSearchResults with an empty array when value is empty" duration="3"/>
    <testCase name="getSearchResult should call getRequests with the correct parameters when category is Requests" duration="10"/>
    <testCase name="getSearchResult should call setSearchResults with an empty array when value is null" duration="2"/>
    <testCase name="getSearchResult should not call setSearchResults when category is not a valid StatusCategoryType" duration="2"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/Pages/management/corporate/index.test.tsx">
    <testCase name="IndexComponent Renders without error" duration="293">
      <failure message="TypeError: Cannot read properties of null (reading &apos;toLowerCase&apos;)"><![CDATA[TypeError: Cannot read properties of null (reading 'toLowerCase')
    at TableComponent (/Users/work/Documents/retailcore-mfe-investment-management/src/components/pages/management/corporate/TableComponent.tsx:440:24)
    at renderWithHooks (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:14985:18)
    at mountIndeterminateComponent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:17811:13)
    at beginWork (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:19049:16)
    at HTMLUnknownElement.callCallback (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:3945:14)
    at HTMLUnknownElement.callTheUserObjectsOperation (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/generated/EventListener.js:26:30)
    at innerInvokeEventListeners (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:338:25)
    at invokeEventListeners (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:274:3)
    at HTMLUnknownElementImpl._dispatch (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:221:9)
    at HTMLUnknownElementImpl.dispatchEvent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:94:17)
    at HTMLUnknownElement.dispatchEvent (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:231:34)
    at Object.invokeGuardedCallbackDev (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:3994:16)
    at invokeGuardedCallback (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:4056:31)
    at beginWork$1 (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:23964:7)
    at performUnitOfWork (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22779:12)
    at workLoopSync (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22707:5)
    at renderRootSync (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22670:7)
    at performSyncWorkOnRoot (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22293:18)
    at scheduleUpdateOnFiber (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:21881:7)
    at updateContainer (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:25482:3)
    at /Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26021:7
    at unbatchedUpdates (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22431:12)
    at legacyRenderSubtreeIntoContainer (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26020:5)
    at Object.render (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:26103:10)
    at /Users/work/Documents/retailcore-mfe-investment-management/node_modules/@testing-library/react/dist/pure.js:101:25
    at batchedUpdates$1 (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom.development.js:22380:12)
    at act (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/react-dom/cjs/react-dom-test-utils.development.js:1042:14)
    at render (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/@testing-library/react/dist/pure.js:97:26)
    at renderWithProviders (/Users/work/Documents/retailcore-mfe-investment-management/src/utils/test-util.tsx:22:28)
    at Object.<anonymous> (/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/Pages/management/corporate/index.test.tsx:32:48)
    at Promise.then.completed (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:391:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/utils.js:316:10)
    at _callCircusTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:218:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:155:3)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:66:9)
    at _runTestsForDescribeBlock (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:60:9)
    at run (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/run.js:25:3)
    at runAndTransformResultsToJestFormat (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:170:21)
    at jestAdapter (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:82:19)
    at runTestInternal (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:389:16)
    at runTest (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/runTest.js:475:34)
    at Object.worker (/Users/work/Documents/retailcore-mfe-investment-management/node_modules/jest-runner/build/testWorker.js:133:12)]]></failure>
    </testCase>
    <testCase name="handleToggle should set isChecker to true and hideCreate to true when selected option includes &quot;approved&quot;" duration="12"/>
    <testCase name="handleToggle should set isChecker to true and hideCreate to true when selected option includes &quot;sent&quot;" duration="8"/>
    <testCase name="handleToggle should set isChecker to false and hideCreate to false when selected option does not include &quot;approved&quot; or &quot;sent&quot;" duration="9"/>
    <testCase name="handleToggle should not throw an error and change values to &apos;false&apos; when selected values when selected value is null" duration="5"/>
    <testCase name="handleToggle should not throw an error and change values to &apos;false&apos; when selected values does not have a text property" duration="4"/>
    <testCase name="handleToggle should not throw an error and change values to &apos;false&apos; when selected values when selected value has a null text property" duration="27"/>
    <testCase name="handleChange should update query object with selected filter and reset page to 1" duration="160"/>
    <testCase name="handleChange should set status_In property of query object to null when activeType is &quot;all&quot;" duration="11"/>
    <testCase name="handleChange should update query object when activeType is not a valid string" duration="5"/>
    <testCase name="handleChange should update query object when category is not a valid string" duration="3"/>
    <testCase name="handleRefresh should call getProducts and prodStatRefetch with updated query when category is Investments" duration="4"/>
    <testCase name="handleRefresh should call getRequests and requestRefetch with updated query when category is Requests" duration="4"/>
    <testCase name="handleRefresh should call getRequests and RequestRefetch when category is undefined" duration="7"/>
    <testCase name="handleSearch Should call setQuery with the provided values" duration="3"/>
    <testCase name="handleRequestStatus should set request data to an empty array when query page is 1" duration="8"/>
    <testCase name="handleRequestStatus should map over request results and add request status and type names to each item in request data" duration="4"/>
    <testCase name="handleRequestStatus should concatenate new request data to previous request data using setRequestData" duration="6"/>
    <testCase name="handleRequestStatus should not set request data to an empty array when query page is not 1" duration="3"/>
    <testCase name="handleRequestStatus should not add request status and type names when request results is empty" duration="15"/>
    <testCase name="handleRequestStatus should not concatenate new request data when request results is empty" duration="3"/>
    <testCase name="handleProductStatus should set product data to an empty array when query page is 1" duration="4"/>
    <testCase name="handleProductStatus should concatenate fetched data results to previous product data, mapping each result to include state and productType properties" duration="15"/>
    <testCase name="handleProductStatus should set hasMore to true if there is a next page in the fetched data" duration="2"/>
    <testCase name="handleProductStatus should not modify product data when query page is not 1" duration="2"/>
    <testCase name="handleProductStatus should not modify product data when data fetch is not successful" duration="2"/>
    <testCase name="handleProductStatus should not modify product data when fetched data results are empty" duration="13"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/pages/investment/term-deposit/create-term-deposit/Summary.test.tsx">
    <testCase name="Container should render a div element with the correct class" duration="45"/>
    <testCase name="Container should render the children passed to it" duration="16"/>
    <testCase name="Container should render without any children" duration="11"/>
    <testCase name="Container should render without any children" duration="6"/>
    <testCase name="Container should render without any children" duration="10"/>
    <testCase name="Summary should render the component without crashing" duration="539"/>
    <testCase name="Summary should display the correct title and breadcrumbs" duration="234"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/forms/MinMaxInput.test.tsx">
    <testCase name="MinMaxInput should render an input field with default value and placeholder" duration="47"/>
    <testCase name="MinMaxInput should allow user input and trigger change event" duration="19"/>
    <testCase name="MinMaxInput should clear errors when input value changes" duration="8"/>
    <testCase name="MinMaxInput should display red border when there is an error" duration="19"/>
    <testCase name="MinMaxInput should not display red border when there is no error" duration="11"/>
    <testCase name="MinMaxInput should display default placeholder if not provided" duration="17"/>
    <testCase name="MinMaxInput renders without errors" duration="40"/>
    <testCase name="MinMaxInput handles value change" duration="13"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/MessagesComponent.test.tsx">
    <testCase name="MessagesComponent renders confirm message without error" duration="180"/>
    <testCase name="MessagesComponent calls handleConfirm and calls setIsConfirmOpen with false when Confirm button is clicked" duration="201"/>
    <testCase name="MessagesComponent calls setIsConfirmOpen with false when cancel button is clicked" duration="100"/>
    <testCase name="MessagesComponent Renders success message" duration="77"/>
    <testCase name="MessagesComponent returns user to dashboard when user clicks on the dashboard link" duration="104"/>
    <testCase name="MessagesComponent Renders Failure message" duration="112"/>
    <testCase name="MessagesComponent Renders Detail component" duration="309"/>
    <testCase name="MessagesComponent Renders Deactivation modals" duration="90"/>
    <testCase name="MessagesComponent Renders loading while deleteLoading == true" duration="58"/>
    <testCase name="MessagesComponent Renders loading while deleteLoading == true" duration="107"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/forms/DateSelect.test.tsx">
    <testCase name="DateSelect renders without errors" duration="187"/>
    <testCase name="DateSelect Shows datePicker on button click" duration="352"/>
    <testCase name="closeDropdown should set isOpen state to false when called with setIsOpen function" duration="5"/>
    <testCase name="closeDropdown should not throw an error when called with setIsOpen function" duration="7"/>
    <testCase name="closeDropdown should not modify any other state or props" duration="3"/>
    <testCase name="handleClick should set the duration to the value of the clicked item" duration="5"/>
    <testCase name="handleClick should set both start and end dates to null when duration is falsy" duration="3"/>
    <testCase name="handleClick should handle gracefully if the item value is not a number" duration="8"/>
    <testCase name="onChange should set start and end date in state object when given an array of dates" duration="4"/>
    <testCase name="onChange should handle null values for start and end dates" duration="3"/>
    <testCase name="onChange should update the state object with new start and end dates" duration="10"/>
    <testCase name="onChange should handle invalid input types" duration="3"/>
    <testCase name="onChange should handle invalid input values" duration="7"/>
    <testCase name="onChange should handle unexpected input formats" duration="3"/>
    <testCase name="closeDropdown should set isOpen state to false when called with setIsOpen function" duration="2"/>
    <testCase name="closeDropdown should not have any side effects other than setting isOpen state to false" duration="2"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/pages/investment/term-deposit/create-term-deposit/IndexComponent.test.tsx">
    <testCase name="IndexComponent renders" duration="604"/>
    <testCase name="IndexComponent Changes values" duration="367"/>
    <testCase name="IndexComponent Show modal when clicking save to Draft" duration="325"/>
    <testCase name="IndexComponent Shows disabled button when form is not valid" duration="149"/>
    <testCase name="IndexComponent Should not have disabled button when fom is valid" duration="301"/>
    <testCase name="FormComponeent Should render if step === 1" duration="94"/>
    <testCase name="FormComponeent Should render if step === 2" duration="424"/>
    <testCase name="FormComponeent Should render if step === 3" duration="253"/>
    <testCase name="FormComponeent Should render if step === 4" duration="243"/>
    <testCase name="FormComponeent Should render if step === 5" duration="69"/>
    <testCase name="handleNext should call setStep when theres more steps ahead" duration="13"/>
    <testCase name="handleNext should not setStep when there are no steps ahead" duration="3"/>
    <testCase name="handlePrev should call setStep when there are steps behind" duration="7"/>
    <testCase name="handlePrev should not call setStep when user is at the first step" duration="3"/>
    <testCase name="handleDraft should set setIsConfirmOpen to false when called" duration="6"/>
    <testCase name="handleDraft should call modifyProduct with isDraft set to true when process is &quot;modify&quot;" duration="2"/>
    <testCase name="handleDraft should call createProduct with isDraft set to true when process is &quot;create&quot; or &quot;clone&quot;" duration="3"/>
    <testCase name="handleDraft should not call any functions when process is undefined" duration="6"/>
    <testCase name="handleDetailsSuccess should set activeId.current to the id of productDetails when it exists" duration="3"/>
    <testCase name="handleDetailsSuccess should set activeId.current to the id of productDetails when it exists 2" duration="2"/>
    <testCase name="handleDetailsSuccess should update previousData.current with relevant fields from productDetails when process is &quot;modify&quot;" duration="17"/>
    <testCase name="handleDetailsSuccess should update productData with relevant fields from productDetails" duration="6"/>
    <testCase name="handleDetailsSuccess should set pricingConfigurationCopy to an empty object before sorting when it is null" duration="3"/>
    <testCase name="handleDetailsSuccess should not sort pricingConfigurationCopy when interestRateConfigModels is null" duration="2"/>
    <testCase name="handlePreviousData should return an object with all properties from prevProductData and productDetails" duration="3"/>
    <testCase name="handlePreviousData should sort the interestRateConfigModels array in pricingConfigurationCopy by min value" duration="2"/>
    <testCase name="handlePreviousData should return an object with all properties from prevProductData and productDetails when pricingConfigurationCopy is null" duration="9"/>
    <testCase name="handleRequestIsSuccess should update product data when requestIsSuccess is true and metaInfo exists" duration="3"/>
    <testCase name="handleRequestIsSuccess should update product data when requestIsSuccess is true and metaInfo exists and process == withdraw_modify" duration="11"/>
    <testCase name="handleMessage should set success text to &quot;Product Setup saved to draft&quot; and open success modal when isSuccess is true" duration="3"/>
    <testCase name="handleMessage should set success text to &quot;Product Setup saved to draft&quot; and open success modal when modifySuccess is true" duration="3"/>
    <testCase name="handleMessage should set success text to &quot;Product Setup saved to draft&quot; and open success modal when modifyRequestSuccess is true" duration="4"/>
    <testCase name="handleMessage should set failed text to &quot;Unable to save as draft&quot; and set failed subtext to error message when isError is true" duration="5"/>
    <testCase name="handleMessage should set failed text to &quot;Unable to save as draft&quot; and set failed subtext to error message when modifyRequestIsError is true" duration="3"/>
    <testCase name="handleMessage should set failed subtext to empty string when error message is undefined" duration="2"/>
    <testCase name="handleNav should call handleNext when step is less than the length of termDepositFormSteps" duration="2"/>
    <testCase name="handleNav should call navigate with the appropriate URL when step is equal to the length of termDepositFormSteps" duration="5"/>
    <testCase name="handleNav should handle error when navigate function throws an error" duration="8"/>
    <testCase name="handleNav should not include id parameter in URL when id is not provided" duration="6"/>
    <testCase name="handleNav should include id parameter in URL when id is provided" duration="3"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/modals/Rejection.test.tsx">
    <testCase name="handleSuccess should set options for ProductSearch component when userIsSuccess is true and branchMembersData is not null or undefined" duration="20"/>
    <testCase name="handleSuccess should not call setUsers when userIsSuccess is false" duration="13"/>
    <testCase name="handleSuccess should call setUsers with an empty array when branchMembersData is an empty array" duration="8"/>
    <testCase name="Rejection should render the Rejection modal with the correct UI and props" duration="379"/>
    <testCase name="Rejection should display the correct title and labels for the form inputs" duration="156"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/Pages/term-deposit/forms/accounting-entries-and-events.test.tsx">
    <testCase name="AccountingEntriesAndEvents Renders without error" duration="370"/>
    <testCase name="AccountingEntriesAndEvents Should change gli inputs value" duration="193"/>
    <testCase name="handleClear should set clearFields state to true when handleClear is called" duration="8"/>
    <testCase name="handleClear should set mapOptions state to an empty array when handleClear is called" duration="8"/>
    <testCase name="handleClear should call reset function when handleClear is called" duration="11"/>
    <testCase name="handleClear should set clearFields state to false when handleClear is called and clearFields state is already true" duration="4"/>
    <testCase name="handleClear should not call setMapOptions function when handleClear is called and mapOptions state is already an empty array" duration="4"/>
    <testCase name="onProceed should call the &quot;proceed&quot; function" duration="8"/>
    <testCase name="onProceed should throw an error when &quot;proceed&quot; is not a function" duration="31"/>
    <testCase name="onProceed should throw an error when &quot;proceed&quot; function throws an error" duration="3"/>
    <testCase name="onProceed should call the &quot;proceed&quot; function each time &quot;onProceed&quot; is called" duration="3"/>
    <testCase name="handleClick should update GlInput value when clicking on a valid submenu" duration="7"/>
    <testCase name="handleClick should add a new object to mapOptions array when clicking on a valid submenu" duration="3"/>
    <testCase name="handleClick should update corresponding object in mapOptions array when clicking on a submenu that is already mapped" duration="2"/>
    <testCase name="handleClick should not update GlInput value when clicking on an invalid submenu" duration="5"/>
    <testCase name="handleClick should not add a new object to mapOptions array when clicking on an invalid submenu" duration="5"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/forms/ComboSelect.test.tsx">
    <testCase name="ComboSelect renders without crashing" duration="45"/>
    <testCase name="ComboSelect matches snapshot" duration="21"/>
    <testCase name="ComboSelect should open the dropdown when the button is clicked" duration="61"/>
    <testCase name="ComboSelect should update selected options when all products and their members are selected" duration="56"/>
    <testCase name="ComboSelect should update selected options when a product and its members are deselected" duration="73"/>
    <testCase name="ComboSelect should update selected options when all products and their members are deselected" duration="45"/>
    <testCase name="ComboSelect should filter the options correctly when searching for a product" duration="63"/>
    <testCase name="ComboSelect should update selected options when a product and its members are selected" duration="47"/>
    <testCase name="closeDropdown should set isOpen state to false when called with setIsOpen(false)" duration="3"/>
    <testCase name="closeDropdown should not throw an error when called with setIsOpen(undefined)" duration="13"/>
    <testCase name="closeDropdown should not throw an error when called with setIsOpen(null)" duration="3"/>
    <testCase name="closeDropdown should not throw an error when called with setIsOpen(0)" duration="4"/>
    <testCase name="closeDropdown should not throw an error when called with setIsOpen(&quot;&quot;)" duration="18"/>
    <testCase name="closeDropdown should not throw an error when called with setIsOpen({})" duration="5"/>
    <testCase name="handleChange should add a new product to selOptions if it doesnt exist" duration="4"/>
    <testCase name="handleChange should remove a product from selOptions if it already exists" duration="17"/>
    <testCase name="productContainsMember should return true when the product contains the member" duration="5"/>
    <testCase name="productContainsMember should return false when the product does not contain the member" duration="10"/>
    <testCase name="productContainsMember should return false when the product is empty" duration="2"/>
    <testCase name="productContainsMember should return false when the member is empty" duration="2"/>
    <testCase name="productContainsMember should return false when the member is null" duration="3"/>
    <testCase name="addNewProduct should return a new array with the new product added to the end of the input array" duration="27"/>
    <testCase name="addNewProduct should not modify the input array" duration="11"/>
    <testCase name="addNewProduct should work with an empty input array" duration="4"/>
    <testCase name="createProduct should return an object with &quot;product&quot; and &quot;members&quot; properties when valid id and members are provided" duration="2"/>
    <testCase name="createProduct should return an object with an empty &quot;members&quot; array when no members are provided" duration="2"/>
    <testCase name="createProduct should handle special characters and spaces in id and member names" duration="2"/>
    <testCase name="createProduct should handle a large number of members" duration="5"/>
    <testCase name="createProduct should handle empty strings as id and member names" duration="7"/>
    <testCase name="handleMemberToggle should add member to product when member is not selected" duration="4"/>
    <testCase name="handleMemberToggle should remove member from product when member is already selected" duration="3"/>
    <testCase name="handleMemberToggle should add product and member to selected options when product is not selected" duration="2"/>
    <testCase name="handleMemberToggle should add member to product when product is already selected but with no members" duration="16"/>
    <testCase name="handleMemberToggle should add member to product when product is already selected with other members" duration="9"/>
    <testCase name="addMemberToProduct should add a member to a product with no existing members" duration="6"/>
    <testCase name="addMemberToProduct should add a member to a product with existing members" duration="6"/>
    <testCase name="addMemberToProduct should return the original products array if memberId is undefined" duration="2"/>
    <testCase name="addMemberToProduct should return the original products array if memberId is already in the product" duration="3"/>
    <testCase name="removeMemberFromProduct should remove a member from a product with multiple members" duration="2"/>
    <testCase name="removeMemberFromProduct should remove a member from a product with only one member" duration="2"/>
    <testCase name="removeMemberFromProduct should handle removing a non-existent member from a product" duration="6"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/forms/FormDate.test.tsx">
    <testCase name="FormDate component should update date on date change" duration="86"/>
    <testCase name="FormDate component should display error message when there is an error" duration="18"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/pages/investment/IndexComponent.test.tsx">
    <testCase name="IndexComponent Renders without error" duration="725"/>
    <testCase name="IndexComponent should display the TopBar component" duration="274"/>
    <testCase name="handleToggle should set isChecker to true and hideCreate to true when selected option includes &quot;approved&quot;" duration="8"/>
    <testCase name="handleToggle should set isChecker to true and hideCreate to true when selected option includes &quot;sent&quot;" duration="3"/>
    <testCase name="handleToggle should set isChecker to false and hideCreate to false when selected option does not include &quot;approved&quot; or &quot;sent&quot;" duration="3"/>
    <testCase name="handleToggle should not throw an error and change values to &apos;false&apos; when selected values when selected value is null" duration="7"/>
    <testCase name="handleToggle should not throw an error and change values to &apos;false&apos; when selected values does not have a text property" duration="4"/>
    <testCase name="handleToggle should not throw an error and change values to &apos;false&apos; when selected values when selected value has a null text property" duration="12"/>
    <testCase name="handleChange should update query object with selected filter and reset page to 1" duration="16"/>
    <testCase name="handleChange should set status_In property of query object to null when activeType is &quot;all&quot;" duration="3"/>
    <testCase name="handleChange should update query object when activeType is not a valid string" duration="3"/>
    <testCase name="handleChange should update query object when category is not a valid string" duration="3"/>
    <testCase name="handleRefresh should call getProducts and prodStatRefetch with updated query when category is AllProducts" duration="4"/>
    <testCase name="handleRefresh should call getRequests and requestRefetch with updated query when category is Requests" duration="3"/>
    <testCase name="handleRefresh should call getRequests and RequestRefetch when category is undefined" duration="6"/>
    <testCase name="handleRefresh should call getProducts and getStatRefresh when StatusCategory type === &apos;all products&apos; " duration="2"/>
    <testCase name="handleSearch Should call setQuery with the provided values" duration="2"/>
    <testCase name="IndexComponent handles search input change and sets search state" duration="254"/>
    <testCase name="IndexComponent handles search and calls appropriate functions" duration="200"/>
    <testCase name="handleRequestStatus should set request data to an empty array when query page is 1" duration="3"/>
    <testCase name="handleRequestStatus should map over request results and add request status and type names to each item in request data" duration="3"/>
    <testCase name="handleRequestStatus should concatenate new request data to previous request data using setRequestData" duration="3"/>
    <testCase name="handleRequestStatus should not set request data to an empty array when query page is not 1" duration="5"/>
    <testCase name="handleRequestStatus should not add request status and type names when request results is empty" duration="2"/>
    <testCase name="handleRequestStatus should not concatenate new request data when request results is empty" duration="2"/>
    <testCase name="handleProductStatus should set product data to an empty array when query page is 1" duration="10"/>
    <testCase name="handleProductStatus should concatenate fetched data results to previous product data, mapping each result to include state and productType properties" duration="8"/>
    <testCase name="handleProductStatus should set hasMore to true if there is a next page in the fetched data" duration="2"/>
    <testCase name="handleProductStatus should not modify product data when query page is not 1" duration="7"/>
    <testCase name="handleProductStatus should not modify product data when data fetch is not successful" duration="2"/>
    <testCase name="handleProductStatus should not modify product data when fetched data results are empty" duration="2"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/forms/FormUpload.test.tsx">
    <testCase name="FormUpload renders without crashing" duration="69"/>
    <testCase name="FormUpload matches snapshot" duration="31"/>
    <testCase name="FormUpload should reset all state variables when handleReset is called" duration="7"/>
    <testCase name="handleFileChange should select a file and set the file type correctly" duration="7"/>
    <testCase name="handleFileChange should set an error message when the file size exceeds the maximum allowed size" duration="29"/>
    <testCase name="handleFileChange should set an error message when no file is selected" duration="5"/>
    <testCase name="handleFileChange should display an error message when selecting a file with an invalid extension" duration="3"/>
    <testCase name="FormUpload should display error message when selecting a file with an unsupported file type" duration="35"/>
    <testCase name="handleDrag should set dragActive to true when dragenter event is triggered" duration="5"/>
    <testCase name="handleDrag should set dragActive to true when dragover event is triggered" duration="3"/>
    <testCase name="handleDrag should set dragActive to false when dragleave event is triggered" duration="10"/>
    <testCase name="handleReset should reset upload data to an empty array" duration="3"/>
    <testCase name="handleReset should set status to null" duration="2"/>
    <testCase name="handleDrop should read and process a valid file when dropped" duration="4"/>
    <testCase name="handleDrop should process a file with a valid file type when dropped" duration="11"/>
    <testCase name="handleDrop should read and process a file with a valid file type when dropped" duration="10"/>
    <testCase name="handleDrop should process a file with a valid file type when dropped" duration="40"/>
    <testCase name="handleDrop should process a file with a valid file type when dropped" duration="17"/>
    <testCase name="handleDrop should set an error message when the file type is not supported" duration="3"/>
    <testCase name="handleDrop should set the base64 image correctly when the file is read" duration="3"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/modals/RequestDeactivation.test.tsx">
    <testCase name="RequestDeactivation should render the component without crashing" duration="238"/>
    <testCase name="RequestDeactivation should display the deactivation request form" duration="62"/>
    <testCase name="RequestDeactivation should allow user to input reason for deactivation" duration="77"/>
    <testCase name="RequestDeactivation should display an error message when the deactivation request fails" duration="44"/>
    <testCase name="RequestDeactivation should allow user to upload supporting documents" duration="64"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/customer-eligibility-criteria.test.tsx">
    <testCase name="ProductInformation Renders without error" duration="455"/>
    <testCase name="handleCheckedRequirements should add document to toggled requirements when it is not already in the list" duration="4"/>
    <testCase name="handleCheckedRequirements should remove document from toggled requirements when it is already in the list" duration="4"/>
    <testCase name="handleSelectAllChange should set toggledRequirements to an empty array and set selectAll to false when selectAll is true" duration="11"/>
    <testCase name="handleSelectAllChange should set toggledRequirements to all documents and set selectAll to true when selectAll is false" duration="5"/>
    <testCase name="requirementDeleteHandler should filter out the item to delete from the selected requirements array" duration="3"/>
    <testCase name="requirementDeleteHandler should update the state with the new array" duration="3"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/ProductDetail.test.tsx">
    <testCase name="ProductDetail Renders without crashing" duration="227"/>
    <testCase name="ProductDetail Renders without crashing" duration="50"/>
    <testCase name="ProductDetail should render data rows correctly" duration="17"/>
    <testCase name="ProductDetail should handle no previous data available" duration="54"/>
    <testCase name="DebitCreditable should render product details correctly" duration="102"/>
    <testCase name="DebitCreditable should display an empty table when dataTab prop is an empty array" duration="6"/>
    <testCase name="DebitCreditable should display the correct S|N value for each row" duration="12"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/pages/management/IndexComponent.test.tsx">
    <testCase name="Dashboard should render Investment Management dashboard with Overview tab selected by default" duration="1126"/>
    <testCase name="Dashboard should render Investment Management dashboard with Book Investment button" duration="881"/>
    <testCase name="Dashboard should allow user to switch between Overview, Corporate and Individual tabs" duration="922"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/forms/InfoLabel.test.tsx">
    <testCase name="InfoLabel Renders without errors" duration="52"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/Sterling-investment.tsx">
    <testCase name="microfrontend bootstraps the app" duration="15"/>
    <testCase name="microfrontend mounts and unmounts" duration="43"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/pricing-config.test.tsx">
    <testCase name="PricingConfig renders without errors" duration="258"/>
    <testCase name="validateSlab should return true when type is 0 and lastSlab.principalMax equals principalMax" duration="4"/>
    <testCase name="validateSlab should return true when type is 1 and lastSlab.tenorMax equals tenorMax" duration="4"/>
    <testCase name="validateSlab should return false when type is not 0 or 1" duration="5"/>
    <testCase name="validateSlab should return false when values.interestRateConfigModels is empty" duration="3"/>
    <testCase name="validateSlab should return false when type is not a number" duration="3"/>
    <testCase name="validateSlab should return false when lastSlab is undefined" duration="3"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/forms/Checkbox.test.tsx">
    <testCase name="Checkbox renders without crashing" duration="31"/>
    <testCase name="Checkbox matches snapshot" duration="23"/>
    <testCase name="Checkbox displays the label" duration="12"/>
    <testCase name="Checkbox initially renders unchecked" duration="16"/>
    <testCase name="Checkbox renders checked when checked prop is true" duration="27"/>
    <testCase name="Checkbox calls onChange when clicked" duration="22"/>
    <testCase name="Checkbox should not call onChange if not provided when handleChange is invoked" duration="13"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/Pages/management/Individual/index.test.tsx">
    <testCase name="IndexComponent Renders without error" duration="722"/>
    <testCase name="handleToggle should set isChecker to true and hideCreate to true when selected option includes &quot;approved&quot;" duration="5"/>
    <testCase name="handleToggle should set isChecker to true and hideCreate to true when selected option includes &quot;sent&quot;" duration="9"/>
    <testCase name="handleToggle should set isChecker to false and hideCreate to false when selected option does not include &quot;approved&quot; or &quot;sent&quot;" duration="4"/>
    <testCase name="handleToggle should not throw an error and change values to &apos;false&apos; when selected values when selected value is null" duration="8"/>
    <testCase name="handleToggle should not throw an error and change values to &apos;false&apos; when selected values does not have a text property" duration="4"/>
    <testCase name="handleToggle should not throw an error and change values to &apos;false&apos; when selected values when selected value has a null text property" duration="7"/>
    <testCase name="handleChange should update query object with selected filter and reset page to 1" duration="6"/>
    <testCase name="handleChange should set status_In property of query object to null when activeType is &quot;all&quot;" duration="3"/>
    <testCase name="handleChange should update query object when activeType is not a valid string" duration="4"/>
    <testCase name="handleChange should update query object when category is not a valid string" duration="3"/>
    <testCase name="handleRefresh should call getProducts and prodStatRefetch with updated query when category is Investments" duration="4"/>
    <testCase name="handleRefresh should call getRequests and requestRefetch with updated query when category is Requests" duration="8"/>
    <testCase name="handleRefresh should call getRequests and RequestRefetch when category is undefined" duration="2"/>
    <testCase name="handleSearch Should call setQuery with the provided values" duration="4"/>
    <testCase name="handleRequestStatus should set request data to an empty array when query page is 1" duration="3"/>
    <testCase name="handleRequestStatus should map over request results and add request status and type names to each item in request data" duration="5"/>
    <testCase name="handleRequestStatus should concatenate new request data to previous request data using setRequestData" duration="3"/>
    <testCase name="handleRequestStatus should not set request data to an empty array when query page is not 1" duration="3"/>
    <testCase name="handleRequestStatus should not add request status and type names when request results is empty" duration="2"/>
    <testCase name="handleRequestStatus should not concatenate new request data when request results is empty" duration="2"/>
    <testCase name="handleProductStatus should set product data to an empty array when query page is 1" duration="29"/>
    <testCase name="handleProductStatus should concatenate fetched data results to previous product data, mapping each result to include state and productType properties" duration="7"/>
    <testCase name="handleProductStatus should set hasMore to true if there is a next page in the fetched data" duration="2"/>
    <testCase name="handleProductStatus should not modify product data when query page is not 1" duration="2"/>
    <testCase name="handleProductStatus should not modify product data when data fetch is not successful" duration="8"/>
    <testCase name="handleProductStatus should not modify product data when fetched data results are empty" duration="3"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/Breadcrumbs.test.tsx">
    <testCase name="Breadcrumbs renders without crashing" duration="40"/>
    <testCase name="Breadcrumbs matches snapshot" duration="19"/>
    <testCase name="Breadcrumbs displays breadcrumb links" duration="26"/>
    <testCase name="Breadcrumbs Can click on links" duration="10"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/forms/CustomComboSelect.test.tsx">
    <testCase name="CustomComboSelect sets the input value when an option is selected" duration="245"/>
    <testCase name="CustomComboSelect handles default value correctly" duration="24"/>
    <testCase name="CustomComboSelect renders &quot;No data&quot; when there are no options" duration="20"/>
    <testCase name="CustomComboSelect Renders without errors" duration="12"/>
    <testCase name="handleDefault should set the selected item to the corresponding value in options when defaultValue matches an item name in options" duration="3"/>
    <testCase name="handleDefault should handle case sensitivity when matching defaultValue to item names in options" duration="3"/>
    <testCase name="classNames should return an empty string when no arguments are passed" duration="3"/>
    <testCase name="classNames should return a single class name when only one argument is passed" duration="5"/>
    <testCase name="classNames should return a concatenated string of class names when multiple arguments are passed" duration="4"/>
    <testCase name="classNames should handle very long class names and a large number of arguments without crashing" duration="3"/>
    <testCase name="classNames should handle special characters and unicode characters in class names" duration="6"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/forms/BorderlessSelect.test.tsx">
    <testCase name="BorderlessSelect Renders without error" duration="63"/>
    <testCase name="BorderlessSelect Shows options when input is clicked" duration="85"/>
    <testCase name="BorderlessSelect indicates that input is required" duration="19"/>
    <testCase name="BorderlessSelect indicates error" duration="19"/>
    <testCase name="BorderlessSelect changes value when clicked and hides options" duration="58"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/forms/Select.test.tsx">
    <testCase name="Select renders without crashing" duration="86"/>
    <testCase name="Select matches snapshot" duration="43"/>
    <testCase name="Select shows the selected option" duration="27"/>
    <testCase name="Select opens the dropdown when clicked" duration="73"/>
    <testCase name="Select calls onChange when option selected" duration="135"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/Pages/term-deposit/forms/preview.test.tsx">
    <testCase name="Preview Renders without crashing" duration="299"/>
    <testCase name="handleSuccess Sets success message if isSuccess and role === superadmin" duration="12"/>
    <testCase name="handleSuccess Sets success message if isSuccess is false and role === superadmin" duration="6"/>
    <testCase name="handleSuccess Sets success message if role !== superadmin" duration="4"/>
    <testCase name="handleErrorMessage Sets error message if isError === true" duration="9"/>
    <testCase name="handleErrorMessage Sets error message if isError === false" duration="11"/>
    <testCase name="handleSubmit Should call modifyProduct if process === modify" duration="4"/>
    <testCase name="handleSubmit Should call modifyRequest if process === withdraw_modify" duration="3"/>
    <testCase name="handleSubmit Should call createProduct if process === create" duration="4"/>
    <testCase name="handleSubmit Should call createProduct if process === continue" duration="10"/>
    <testCase name="handleSubmit Should call createProduct if process === clone" duration="2"/>
    <testCase name="handleCancel Sets correct message when process === create" duration="5"/>
    <testCase name="handleCancel Sets correct message when process === modify" duration="3"/>
    <testCase name="handleCancel Sets correct message when process === continue" duration="3"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/Loader.test.tsx">
    <testCase name="Breadcrumbs renders without crashing" duration="101"/>
    <testCase name="Breadcrumbs matches snapshot" duration="18"/>
    <testCase name="Loader should render Loader component when isOpen is true" duration="187"/>
    <testCase name="Loader should not render Loader component when isOpen is false" duration="7"/>
    <testCase name="Loader should not throw an error when setIsOpen is not provided" duration="55"/>
    <testCase name="Loader should spin the AiOutlineLoading icon when Loader component is rendered" duration="57"/>
    <testCase name="Loader should display the text prop in the Loader component" duration="66"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/pages/management/book-investment/FormComponent.test.tsx">
    <testCase name="code snippet should render the customer information form when step is 1" duration="117"/>
    <testCase name="code snippet should render the customer information form when step is 2" duration="37"/>
    <testCase name="code snippet should pass the &apos;proceed&apos; function to the &apos;CustomerInformation&apos; component" duration="43"/>
    <testCase name="code snippet should allow the user to input customer information" duration="98"/>
    <testCase name="code snippet should handle invalid input data correctly" duration="52"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/summary/Actions.test.tsx">
    <testCase name="Actions should renderWithProviders a div element with specific class and styling" duration="117"/>
    <testCase name="Actions should call the corresponding functions when Cancel, Modify, or Submit buttons are clicked" duration="27"/>
    <testCase name="Actions should call the corresponding functions when Print, Share, or Return to dashboard buttons are clicked" duration="26"/>
    <testCase name="Actions should set the confirm text to &quot;Product creation approve&quot; when sub_type is not provided and action is &quot;approve&quot;" duration="17"/>
    <testCase name="Actions should set the confirm text to &quot;Product creation reject&quot; when sub_type is not provided and action is &quot;reject&quot;" duration="27"/>
    <testCase name="Actions should set the confirm text to &quot;Product activation approve&quot; when sub_type is &quot;activation&quot; and action is &quot;approve&quot;" duration="21"/>
    <testCase name="Actions Should call initiate verdict" duration="317"/>
    <testCase name="handleConfirm should call approveProduct when action is &quot;approve&quot;" duration="6"/>
    <testCase name="handleConfirm should set setRejection to true when action is &quot;reject&quot;" duration="37"/>
    <testCase name="handleConfirm should navigate to &quot;/product-factory/investment?category=requests&quot; when action is &quot;cancel&quot;" duration="4"/>
    <testCase name="handleConfirm should do nothing when &quot;action&quot; parameter is not provided" duration="8"/>
    <testCase name="handleMessages should set success text and open success modal when rejectSuccess is true" duration="4"/>
    <testCase name="handleMessages should set success text and open success modal when approveSuccess is true" duration="4"/>
    <testCase name="handleMessages should not set any text or open any modal when rejectSuccess and approveSuccess are both false" duration="3"/>
    <testCase name="handleMessages should not set any text or open any modal when rejectError and approveError are both null" duration="3"/>
    <testCase name="handleMessages should set failed text and subtext when rejectError and approveError are both defined" duration="5"/>
    <testCase name="handleMessages should set failed text and subtext when rejectError is defined and approveError is null" duration="3"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/FormStepComponent.test.tsx">
    <testCase name="FormStepComponent should render the correct number of form step items when formStepItems is not empty" duration="61"/>
    <testCase name="FormStepComponent should render the correct label for each form step item when formStepItems is not empty" duration="14"/>
    <testCase name="FormStepComponent should render the correct index for each form step item when formStepItems is not empty" duration="45"/>
    <testCase name="FormStepComponent should handle empty formStepItems array and render default form step item" duration="9"/>
    <testCase name="FormStepComponent should handle step value greater than the number of formStepItems and render last form step item" duration="12"/>
    <testCase name="FormStepComponent should handle step value less than 1 and render first form step item" duration="12"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/SideLabelSearchSelect.test.tsx">
    <testCase name="InputDivs should render a div with a label and a child div" duration="91"/>
    <testCase name="InputDivs should display a RedDot component next to the label" duration="12"/>
    <testCase name="InputDivs should accept a label prop and render it as text" duration="13"/>
    <testCase name="InputDivs should render without a label when label prop is not provided" duration="7"/>
    <testCase name="InputDivs should render without a child div when children prop is not provided" duration="14"/>
    <testCase name="InputDivs should render an empty label when label prop is an empty string" duration="20"/>
    <testCase name="SideLabelSearchSelect should render the component with default props and input options" duration="278"/>
    <testCase name="SideLabelSearchSelect should handle empty input field correctly" duration="90"/>
    <testCase name="SideLabelSearchSelect should handle long input field values correctly" duration="59"/>
    <testCase name="SideLabelSearchSelect should handle special characters in input field values correctly" duration="55"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/Dropdown.test.tsx">
    <testCase name="Dropdown renders without crashing" duration="74"/>
    <testCase name="Dropdown matches snapshot" duration="24"/>
    <testCase name="Dropdown selects the right icon" duration="30"/>
    <testCase name="Dropdown renders right icon when button is clicked" duration="165"/>
    <testCase name="Dropdown applies active class to the selected option" duration="82"/>
    <testCase name="handleIcons should return the correct React component for each input value" duration="6"/>
    <testCase name="handleIcons should handle all valid input values" duration="4"/>
    <testCase name="TestDrop should render a button with children passed as props" duration="14"/>
    <testCase name="TestDrop should render a dropdown menu on button click" duration="65"/>
    <testCase name="TestDrop should render menu items based on options passed as props" duration="89"/>
    <testCase name="TestDrop should not render dropdown menu when trigger button is not clicked" duration="20"/>
    <testCase name="TestDrop should not render menu items when options prop is not passed" duration="53"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/Pages/management/Individual/TableComponent.test.tsx">
    <testCase name="handleDropdown should return an array of options based on the status, isChecker, locked, and permissions parameters" duration="26"/>
    <testCase name="handleDropdown should filter out &quot;deactivate&quot; and &quot;activate&quot; options if user does not have &quot;CREATE_PRODUCT&quot; permission" duration="5"/>
    <testCase name="handleDropdown should filter out &quot;modify&quot; option if user does not have &quot;CREATE_PRODUCT&quot; permission and is not a checker" duration="5"/>
    <testCase name="handleDropdown should return an array with only &quot;view&quot; option if locked parameter is true and &quot;view&quot; option exists" duration="6"/>
    <testCase name="handleDropdown should return an empty array if locked parameter is true and &quot;view&quot; option does not exist" duration="3"/>
    <testCase name="handleDropdown should return an array with only &quot;view&quot; option if isChecker parameter is true and &quot;view&quot; option exists" duration="4"/>
    <testCase name="handleHeaders should filter out &apos;created_by&apos; when isChecker is true" duration="3"/>
    <testCase name="handleHeaders should filter out &apos;approved_By&apos; when isChecker is false" duration="7"/>
    <testCase name="handleDownload should generate CSV for requests category" duration="8"/>
    <testCase name="handleDownload should generate CSV for product category" duration="9"/>
    <testCase name="handleDownload should not generate CSV if downloadData is empty" duration="4"/>
    <testCase name="initiateDownload should download all requests when category is &quot;requests&quot;" duration="8"/>
    <testCase name="initiateDownload should not call download functions when category is not &quot;all products&quot; or &quot;requests&quot;" duration="9"/>
    <testCase name="initiateDownload should call downloadProducts with the correct parameters when category is Investments" duration="3"/>
    <testCase name="initiateDownload should call downloadRequests with the correct parameters when category is not Investments" duration="8"/>
    <testCase name="initiateDownload should not call downloadProducts or downloadRequests when category is not defined or has an invalid value" duration="3"/>
    <testCase name="getSearchResult should call setSearchResults with an empty array when value is empty" duration="3"/>
    <testCase name="getSearchResult should call getRequests with the correct parameters when category is Requests" duration="9"/>
    <testCase name="getSearchResult should call setSearchResults with an empty array when value is null" duration="2"/>
    <testCase name="getSearchResult should not call setSearchResults when category is not a valid StatusCategoryType" duration="3"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/forms/MultiSelect.test.tsx">
    <testCase name="MultiSelect renders without crashing" duration="33"/>
    <testCase name="MultiSelect opens and closes dropdown when clicked" duration="46"/>
    <testCase name="MultiSelect should toggle dropdown when button is clicked" duration="57"/>
    <testCase name="MultiSelect should select/deselect option when checkbox is clicked" duration="41"/>
    <testCase name="MultiSelect should render correctly with an empty options array" duration="25"/>
    <testCase name="MultiSelect should check select all" duration="28"/>
    <testCase name="MultiSelect should update checkbox state when props change" duration="47"/>
    <testCase name="closeDropdown should set isOpen state to false when setIsOpen is called with false" duration="4"/>
    <testCase name="closeDropdown should handle setIsOpen being called with a boolean value" duration="4"/>
    <testCase name="handleChange should add a new option to selectedOptions array when it does not exist" duration="13"/>
    <testCase name="handleChange should remove an option from selectedOptions array when it already exists" duration="4"/>
    <testCase name="handleChange should call setSelectedOptions with the same array when an option is already selected" duration="3"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/Pages/term-deposit/forms/toggle-input-children.test.tsx">
    <testCase name="ToggleInputChildren should render the label and a switch component when rendered" duration="119"/>
    <testCase name="ToggleInputChildren should toggle the switch component on click" duration="23"/>
    <testCase name="ToggleInputChildren should set the default value of the switch component if defaultValue prop is not null" duration="27"/>
    <testCase name="ToggleInputChildren should not set the default value of the switch component if defaultValue prop is null" duration="17"/>
    <testCase name="ToggleInputChildren should call setValue and trigger with the correct inputName when the switch component is toggled" duration="27"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/liquidity-setup.test.tsx">
    <testCase name="LiquiditySetup Renders without error" duration="524"/>
    <testCase name="handleSelected should set partOptionCharges and earlyOptionCharges when inputName is &quot;part_SpecificCharges&quot; or &quot;early_SpecificCharges&quot; respectively" duration="5"/>
    <testCase name="handleSelected should set value of &quot;part_SpecificCharges&quot; or &quot;early_SpecificCharges&quot; to selectedOptions when inputName is &quot;part_SpecificCharges&quot; or &quot;early_SpecificCharges&quot; respectively" duration="4"/>
    <testCase name="handleSelected should not set partOptionCharges, earlyOptionCharges, or value when inputName is not &quot;part_SpecificCharges&quot; or &quot;early_SpecificCharges&quot;" duration="4"/>
    <testCase name="handleSelected should not set partOptionCharges, earlyOptionCharges, or value when selectedOptions is null or undefined" duration="4"/>
    <testCase name="onProceed should set early_SpecificCharges and part_SpecificCharges in formData and call proceed function when all parameters are defined" duration="4"/>
    <testCase name="onProceed should set early_SpecificCharges and part_SpecificCharges in formData as undefined when earlyOptionCharges and partOptionCharges are undefined" duration="13"/>
    <testCase name="onProceed should set early_SpecificCharges and part_SpecificCharges in formData as null when earlyOptionCharges and partOptionCharges are null" duration="5"/>
    <testCase name="onProceed should set early_SpecificCharges and part_SpecificCharges in formData as null when formData is null" duration="9"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/App.test.tsx">
    <testCase name="Test App Component If App is rendered wihout issues" duration="46"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/forms/GlInput.tsx">
    <testCase name="closeDropdown should set isOpen state to false when called with a valid setIsOpen function" duration="13"/>
    <testCase name="EntriesAndEventsSearchResults should render a search input field with a search icon" duration="164"/>
    <testCase name="EntriesAndEventsSearchResults should allow user to input search query" duration="34"/>
    <testCase name="EntriesAndEventsSearchResults should display a dropdown menu when search input field is clicked" duration="37"/>
    <testCase name="EntriesAndEventsSearchResults should display an empty dropdown menu when there are no GL classes" duration="25"/>
    <testCase name="EntriesAndEventsSearchResults should display an empty list of ledgers when a GL class has no ledgers" duration="23"/>
    <testCase name="EntriesAndEventsSearchResults should display an error message when there is an error fetching GL classes or ledgers" duration="26"/>
    <testCase name="EntriesAndEventsSearchResults renders with default props" duration="27"/>
    <testCase name="EntriesAndEventsSearchResults handles input change and displays results" duration="39"/>
    <testCase name="EntriesAndEventsSearchResults handles click on a result and triggers functions" duration="21"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/forms/MultiSelectForm2.tsx">
    <testCase name="handleChange should add a new value to selectedOptions array when it doesnt already exist" duration="12"/>
    <testCase name="handleChange should remove a value from selectedOptions array when it already exists" duration="5"/>
    <testCase name="handleChange should handle null or undefined value parameter" duration="4"/>
    <testCase name="handleChange should handle null or undefined setSelectedOptions parameter" duration="39"/>
    <testCase name="handleChange should handle null or undefined id parameter" duration="4"/>
    <testCase name="closeDropdown should set isOpen state to false when called with setIsOpen(false)" duration="3"/>
    <testCase name="closeDropdown should not throw an error when called with setIsOpen" duration="3"/>
    <testCase name="closeDropdown should not have any side effects other than setting isOpen state to false" duration="38"/>
    <testCase name="closeDropdown should not affect any other state or props" duration="4"/>
    <testCase name="MultiSelectForm2 should render a search input with the provided placeholder prop" duration="40"/>
    <testCase name="MultiSelectForm2 should render a list of options with checkboxes" duration="9"/>
    <testCase name="MultiSelectForm2 should render a default placeholder when no placeholder prop is provided" duration="10"/>
    <testCase name="handleClick should register inputName when called" duration="4"/>
    <testCase name="handleClick should set value for inputName to selectedOptions when called" duration="3"/>
    <testCase name="handleClick should call handleSelected with inputName and selectedOptions when called" duration="5"/>
    <testCase name="MultiSelectForm2 renders error message when there are errors" duration="20"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/investment/dashboard/TableComponent.test.tsx">
    <testCase name="handleDropdown should return an array of options based on the status, isChecker, locked, and permissions parameters" duration="13"/>
    <testCase name="handleDropdown should filter out &quot;deactivate&quot; and &quot;activate&quot; options if user does not have &quot;CREATE_PRODUCT&quot; permission" duration="4"/>
    <testCase name="handleDropdown should filter out &quot;modify&quot; option if user does not have &quot;CREATE_PRODUCT&quot; permission and is not a checker" duration="4"/>
    <testCase name="handleDropdown should return an array with only &quot;view&quot; option if locked parameter is true and &quot;view&quot; option exists" duration="4"/>
    <testCase name="handleDropdown should return an empty array if locked parameter is true and &quot;view&quot; option does not exist" duration="4"/>
    <testCase name="handleDropdown should return an array with only &quot;view&quot; option if isChecker parameter is true and &quot;view&quot; option exists" duration="3"/>
    <testCase name="handleHeaders should filter out &apos;created_by&apos; when isChecker is true" duration="3"/>
    <testCase name="handleHeaders should filter out &apos;approved_By&apos; when isChecker is false" duration="10"/>
    <testCase name="handleDownload should generate CSV for requests category" duration="14"/>
    <testCase name="handleDownload should generate CSV for product category" duration="4"/>
    <testCase name="handleDownload should not generate CSV if downloadData is empty" duration="3"/>
    <testCase name="initiateDownload should download all products when category is &quot;all products&quot;" duration="4"/>
    <testCase name="initiateDownload should download all requests when category is &quot;requests&quot;" duration="9"/>
    <testCase name="initiateDownload should include selected filter value in download query" duration="2"/>
    <testCase name="initiateDownload should not include filter value in download query when no selected filter value is provided" duration="2"/>
    <testCase name="initiateDownload should not call download functions when category is not &quot;all products&quot; or &quot;requests&quot;" duration="9"/>
    <testCase name="initiateDownload should call download functions with empty query object" duration="3"/>
    <testCase name="initiateDownload should set page size to 1000000 in download query" duration="3"/>
    <testCase name="getSearchResult should call setSearchResults with an empty array when value is empty" duration="5"/>
    <testCase name="getSearchResult should call getProducts with the correct parameters when category is AllProducts" duration="3"/>
    <testCase name="getSearchResult should call getRequests with the correct parameters when category is Requests" duration="21"/>
    <testCase name="getSearchResult should call setSearchResults with an empty array when value is null" duration="5"/>
    <testCase name="getSearchResult should not call setSearchResults when category is not a valid StatusCategoryType" duration="7"/>
    <testCase name="getSearchResult should call getProducts/getRequests with filter_by as undefined when selected is null" duration="3"/>
    <testCase name="getSearchResult should call setSearchResults with an empty array when getProducts/getRequests returns an error" duration="2"/>
    <testCase name="getSearchResult should call getProducts/getRequests with the correct parameters when value is a string with special characters" duration="16"/>
    <testCase name="getSearchResult should call setSearchResults with an empty array when value is a string with only spaces" duration="3"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/modals/BookingDetail.test.tsx">
    <testCase name="code snippet should render" duration="331"/>
    <testCase name="BookingDetailLayout should render the product details correctly when isLoading is false" duration="126"/>
    <testCase name="BookingDetailLayout should render the loading spinner when isLoading is true" duration="41"/>
    <testCase name="BookingDetailLayout should render the product state as &quot;Active&quot; when productData state is 2" duration="78"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/summary/IndexComponent.test.tsx">
    <testCase name="IndexComponent Renders without crashing" duration="95"/>
  </file>
  <file path="/Users/work/Documents/retailcore-mfe-investment-management/src/__tests__/components/Button.test.tsx">
    <testCase name="Button renders without crashing" duration="31"/>
    <testCase name="Button renders children" duration="11"/>
    <testCase name="Button applies custom className" duration="7"/>
    <testCase name="Button can show loader" duration="10"/>
    <testCase name="Button can hide loader" duration="5"/>
    <testCase name="Button can render button elements" duration="5"/>
    <testCase name="Button calls onClick handler" duration="9"/>
  </file>
</testExecutions>